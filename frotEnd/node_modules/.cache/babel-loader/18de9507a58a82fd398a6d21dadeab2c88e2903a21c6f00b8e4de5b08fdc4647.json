{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this._handleReaderLoaded = async e => {\n      let binaryString = e.target.result;\n      this.setState({\n        base64Data: await [btoa(binaryString).toString()]\n      });\n      console.log(this.base64Data);\n      // axios\n      //   .post(`https://api.imgbb.com/1/upload?key=198d62c2c2ca10a6d7838497b71d53ba&image=${this.base64Data}`)\n      //   .then(function (response) {\n      //     console.log(this.base64Data)\n      //     return response.data\n      //   }).catch(function (error) {\n      //     console.log(this.base64Data)\n      //     console.error(error);\n      //     return error\n      //   });\n      // const options = await {\n      //   method: 'POST',\n      //   url: `https://api.imgbb.com/1/upload?key=198d62c2c2ca10a6d7838497b71d53ba&image=${file}`,\n      // };\n\n      // let response = await axios.request(options)\n      //     .then(function (response) {\n      //         console.log(response)\n      //         return response.data\n      //     }).catch(function (error) {\n      //         console.error(error);\n      //         return error\n      //     });\n    };\n    this.state = {\n      base64Data: null\n    };\n  }\n  componentDidMount() {\n    // console.log('inside did mount')\n    let file = this.props.data;\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n      // console.log(file)\n    }\n  }\n\n  render() {\n    const {\n      base64Data\n    } = this.state;\n    const str = base64Data.split('=');\n    console.log(str);\n    //  axios\n    //   .post(`https://api.imgbb.com/1/upload?expiration=600&key=198d62c2c2ca10a6d7838497b71d53ba&image=${new_str}`)\n    //   .then(function (response) {\n    //     console.log(response)\n    //     return response.data\n    //   }).catch(function (error) {\n    //     // console.log(this.base64Data)\n    //     console.error(error);\n    //     return error\n    //   });\n\n    return base64Data;\n  }\n}\nexport default ImageUpload;","map":{"version":3,"names":["React","axios","ImageUpload","Component","constructor","props","_handleReaderLoaded","e","binaryString","target","result","setState","base64Data","btoa","toString","console","log","state","componentDidMount","file","data","reader","FileReader","onload","bind","readAsBinaryString","render","str","split"],"sources":["/Users/WillyErlemann/Documents/coding/Capstone-Project/frotEnd/src/components/hooks/imageUpload.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      base64Data: null\n\n    };\n  }\n\n  componentDidMount() {\n    // console.log('inside did mount')\n    let file = this.props.data;\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n      // console.log(file)\n    }\n  };\n\n  _handleReaderLoaded = async e => {\n\n    let binaryString = e.target.result;\n    this.setState({\n      base64Data: await  [btoa(binaryString).toString()]\n    });\n    console.log(this.base64Data)\n    // axios\n    //   .post(`https://api.imgbb.com/1/upload?key=198d62c2c2ca10a6d7838497b71d53ba&image=${this.base64Data}`)\n    //   .then(function (response) {\n    //     console.log(this.base64Data)\n    //     return response.data\n    //   }).catch(function (error) {\n    //     console.log(this.base64Data)\n    //     console.error(error);\n    //     return error\n    //   });\n    // const options = await {\n    //   method: 'POST',\n    //   url: `https://api.imgbb.com/1/upload?key=198d62c2c2ca10a6d7838497b71d53ba&image=${file}`,\n    // };\n\n    // let response = await axios.request(options)\n    //     .then(function (response) {\n    //         console.log(response)\n    //         return response.data\n    //     }).catch(function (error) {\n    //         console.error(error);\n    //         return error\n    //     });\n  };\n\n  render() {\n    const { base64Data } = this.state;\n    const str = base64Data.split('=')\n    console.log(str)\n    //  axios\n    //   .post(`https://api.imgbb.com/1/upload?expiration=600&key=198d62c2c2ca10a6d7838497b71d53ba&image=${new_str}`)\n    //   .then(function (response) {\n    //     console.log(response)\n    //     return response.data\n    //   }).catch(function (error) {\n    //     // console.log(this.base64Data)\n    //     console.error(error);\n    //     return error\n    //   });\n    \n\n    return base64Data\n  }\n}\n\nexport default ImageUpload;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,WAAW,SAASF,KAAK,CAACG,SAAS,CAAC;EACxCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAmBfC,mBAAmB,GAAG,MAAMC,CAAC,IAAI;MAE/B,IAAIC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;MAClC,IAAI,CAACC,QAAQ,CAAC;QACZC,UAAU,EAAE,MAAO,CAACC,IAAI,CAACL,YAAY,CAAC,CAACM,QAAQ,EAAE;MACnD,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,UAAU,CAAC;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;IAhDC,IAAI,CAACK,KAAK,GAAG;MACXL,UAAU,EAAE;IAEd,CAAC;EACH;EAEAM,iBAAiB,GAAG;IAClB;IACA,IAAIC,IAAI,GAAG,IAAI,CAACd,KAAK,CAACe,IAAI;IAE1B,IAAID,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,IAAI,CAACjB,mBAAmB,CAACkB,IAAI,CAAC,IAAI,CAAC;MACnDH,MAAM,CAACI,kBAAkB,CAACN,IAAI,CAAC;MAC/B;IACF;EACF;;EAkCAO,MAAM,GAAG;IACP,MAAM;MAAEd;IAAW,CAAC,GAAG,IAAI,CAACK,KAAK;IACjC,MAAMU,GAAG,GAAGf,UAAU,CAACgB,KAAK,CAAC,GAAG,CAAC;IACjCb,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA,OAAOf,UAAU;EACnB;AACF;AAEA,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}