{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this._handleReaderLoaded = e => {\n      let binaryString = e.target.result;\n      this.setState({\n        base64Data: [btoa(binaryString)]\n      });\n      axios.get(`http://localhost:3001/photoToURL?toBase64=${base64}`).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.state = {\n      base64Data: null\n    };\n  }\n  componentDidMount() {\n    console.log('inside did mount');\n    let file = this.props.data;\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n  render() {\n    const {\n      base64Data\n    } = this.state;\n    // console.log(typeof(base64Data))\n    return base64Data;\n  }\n}\nexport default ImageUpload;","map":{"version":3,"names":["React","axios","ImageUpload","Component","constructor","props","_handleReaderLoaded","e","binaryString","target","result","setState","base64Data","btoa","get","base64","then","res","console","log","catch","err","state","componentDidMount","file","data","reader","FileReader","onload","bind","readAsBinaryString","render"],"sources":["/Users/WillyErlemann/Documents/coding/Capstone-Project/frotEnd/src/components/hooks/imageUpload.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      base64Data: null\n\n    };\n  }\n\n  componentDidMount( ){\n    console.log('inside did mount')\n    let file = this.props.data;\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = this._handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  };\n\n  _handleReaderLoaded = e => {\n    \n    let binaryString = e.target.result;\n    this.setState({\n      base64Data: [btoa(binaryString)]     \n    });\n    axios\n    .get(`http://localhost:3001/photoToURL?toBase64=${base64}`)\n    .then(res => {\n        \n        console.log(res)\n\n    })\n    .catch(err => {\n        console.log(err)\n    })\n  };\n\n  render() {\n   \n    const { base64Data } = this.state;\n    // console.log(typeof(base64Data))\n    return base64Data\n  }\n}\n\nexport default ImageUpload;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,WAAW,SAASF,KAAK,CAACG,SAAS,CAAC;EACxCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAkBfC,mBAAmB,GAAGC,CAAC,IAAI;MAEzB,IAAIC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;MAClC,IAAI,CAACC,QAAQ,CAAC;QACZC,UAAU,EAAE,CAACC,IAAI,CAACL,YAAY,CAAC;MACjC,CAAC,CAAC;MACFP,KAAK,CACJa,GAAG,CAAE,6CAA4CC,MAAO,EAAC,CAAC,CAC1DC,IAAI,CAACC,GAAG,IAAI;QAETC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAEpB,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;QACVH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IAjCC,IAAI,CAACC,KAAK,GAAG;MACXV,UAAU,EAAE;IAEd,CAAC;EACH;EAEAW,iBAAiB,GAAG;IAClBL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAIK,IAAI,GAAG,IAAI,CAACnB,KAAK,CAACoB,IAAI;IAE1B,IAAID,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,IAAI,CAACtB,mBAAmB,CAACuB,IAAI,CAAC,IAAI,CAAC;MACnDH,MAAM,CAACI,kBAAkB,CAACN,IAAI,CAAC;IACjC;EACF;EAoBAO,MAAM,GAAG;IAEP,MAAM;MAAEnB;IAAW,CAAC,GAAG,IAAI,CAACU,KAAK;IACjC;IACA,OAAOV,UAAU;EACnB;AACF;AAEA,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}