{"ast":null,"code":"var _jsxFileName = \"/Users/WillyErlemann/Documents/coding/mini-project-2/frotEnd/src/components/hooks/useTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport ModalPage from '../modalPages';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Table(res) {\n  _s();\n  // const [isOpen, setIsOpen] = React.useState(false);\n\n  // const showModal = () => {\n  //     setIsOpen(true);\n  // };\n\n  // const hideModal = () => {\n  //     setIsOpen(false);\n  // };\n  // const [show, setShow] = useState(false);\n\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    setTableData(res.data);\n    // console.log(tableData)\n  });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableCss\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Name recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData ? tableData.map(tableDate => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: tableDate.id\n            }, tableDate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tableDate.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tableDate.image,\n                className: \"card-img-top\",\n                alt: \"first Recipe\",\n                id: \"imageList\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ModalPage, {\n                data: tableDate.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 68\n          }, this)) : console.log(\"error\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Table, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useState","useEffect","React","ModalPage","Table","res","tableData","setTableData","data","map","tableDate","id","title","image","console","log"],"sources":["/Users/WillyErlemann/Documents/coding/mini-project-2/frotEnd/src/components/hooks/useTable.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport ModalPage from '../modalPages'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction Table(res) {\n    // const [isOpen, setIsOpen] = React.useState(false);\n\n    // const showModal = () => {\n    //     setIsOpen(true);\n    // };\n\n    // const hideModal = () => {\n    //     setIsOpen(false);\n    // };\n    // const [show, setShow] = useState(false);\n\n    // const handleClose = () => setShow(false);\n    // const handleShow = () => setShow(true);\n    const [tableData, setTableData] = useState([])\n    useEffect(() => {\n        setTableData(res.data);\n        // console.log(tableData)\n\n    })\n    return (\n        <>\n\n\n            <div className=\"tableCss\">\n                <table className=\"table\">\n\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">id</th>\n                            <th scope=\"col\">Name recipe</th>\n                            <th scope=\"col\"></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            tableData ? tableData.map(tableDate => <tr>\n                                <th key={tableDate.id}>{tableDate.id}</th>\n                                <td>{tableDate.title}</td>\n                                <td><img src={tableDate.image} className=\"card-img-top\" alt=\"first Recipe\" id='imageList' /></td>  \n                                <td>\n                                <ModalPage data={tableDate.id} />\n                                </td>\n                            </tr>\n                            )\n\n                                : console.log(\"error\")\n                        }\n                    </tbody>\n                </table>\n\n            </div >\n        </>\n    )\n}\n\n\nexport default Table;\n\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAO,sCAAsC;AAAC;AAAA;AAE9C,SAASC,KAAK,CAACC,GAAG,EAAE;EAAA;EAChB;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACZM,YAAY,CAACF,GAAG,CAACG,IAAI,CAAC;IACtB;EAEJ,CAAC,CAAC;;EACF,oBACI;IAAA,uBAGI;MAAK,SAAS,EAAC,UAAU;MAAA,uBACrB;QAAO,SAAS,EAAC,OAAO;QAAA,wBAEpB;UAAA,uBACI;YAAA,wBACI;cAAI,KAAK,EAAC,KAAK;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAQ,eACvB;cAAI,KAAK,EAAC,KAAK;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAiB,eAChC;cAAI,KAAK,EAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA;QACpB;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UAEQF,SAAS,GAAGA,SAAS,CAACG,GAAG,CAACC,SAAS,iBAAI;YAAA,wBACnC;cAAA,UAAwBA,SAAS,CAACC;YAAE,GAA3BD,SAAS,CAACC,EAAE;cAAA;cAAA;cAAA;YAAA,QAAqB,eAC1C;cAAA,UAAKD,SAAS,CAACE;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eAC1B;cAAA,uBAAI;gBAAK,GAAG,EAAEF,SAAS,CAACG,KAAM;gBAAC,SAAS,EAAC,cAAc;gBAAC,GAAG,EAAC,cAAc;gBAAC,EAAE,EAAC;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAAK,eACjG;cAAA,uBACA,QAAC,SAAS;gBAAC,IAAI,EAAEH,SAAS,CAACC;cAAG;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAC5B;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ,CACJ,GAEKG,OAAO,CAACC,GAAG,CAAC,OAAO;QAAC;UAAA;UAAA;UAAA;QAAA,QAE1B;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EAEL,iBACR;AAEX;AAAC,GAtDQX,KAAK;AAAA,KAALA,KAAK;AAyDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}